(lambda () x)
(lambda (x y) x y z)
(define x
    (lambda (y) y))
(x 10101)


(define not
  (lambda (bool)
    (if bool #f #t)))

(define tofu
  (lambda (cond conseq alt)
    (let ((nconseq (not conseq))
          (nalt (not alt)))
      (if cond nconseq nalt))))

(tofu 23 #f #t)

((if #f 1 x) 123)
(define x
    (lambda (a b)
        (if a b a)))
(x 1 3)
(x #f 3)

(define something
    (lambda () "hi!"))
(something)

(let ((x 1) (y 2))
    (define x "new")
    x)
x

(let ((a 1) (b 2))
    (define x "new")
    x
    (define b "bbb")
    b)

(define (x a b c) c)
(x 11 22 33)
(define (y) "no vars")
(y)
;(x 1 2 3)
;(lambda ())

((lambda (x) (quote x)) "hello")