(load "library.scm")
(define x "this")
(define y "this")
(define z x)
(define w (if #t #t))
(define v (if #t #f))
(equal? 1 2)
(equal? +.2344 0.23440)
(equal? "hello" "hello")
(equal? x y)
(equal? z x)
(equal? v w)
(equal? v #f)
(equal? (quote a) (quote a))
(define lst1 (quote ("a" "b" "c")))
(define lst2 (quote ("a" "b" "c")))
(define lst3 lst1)
(equal? (quote (1 2 3)) (quote (1 2 3)))
(equal? lst1 lst2)
(equal? lst1 lst3)
(define r (lambda (x) x))
(define q (lambda (x) x))
(define s r)
(equal? (lambda (x) x) (lambda (x) x))
(equal? r q)
(equal? r s)
(let ((j (+ 2 3)))
  (equal? j j))
(let ((k (quote a)))
  (equal? k k))
(let ((l (lambda (x) x)))
  (equal? l l))
(equal? (quote ()) (quote ()))
(equal? "" "")
(equal? a a)
